{"ast":null,"code":"/*\r\nexport function importData() {\r\n  console.log(\"entrer dans importData\");\r\n\r\n  return new Promise((resolve, reject) => {\r\n    Papa.parse(\"../public/datat.csv\", {\r\n      download: true,\r\n      header: true,\r\n      complete: function(results: { data: any[] }) {\r\n        console.log(\"Chargement terminé. Données :\", results.data);\r\n\r\n        // Créer une chaîne avec les 5 premières lignes du CSV\r\n        let firstFiveRows = '';\r\n        for (let i = 0; i < 5 && i < results.data.length; i++) {\r\n          firstFiveRows += JSON.stringify(results.data[i]) + '\\n';\r\n        }\r\n\r\n        // Afficher les 5 premières lignes dans une popup\r\n        alert(firstFiveRows);\r\n\r\n        // Résoudre la promesse avec les données\r\n        resolve(results.data);\r\n      },\r\n      error: function(error) {\r\n        console.log(\"Une erreur s'est produite lors du chargement du fichier CSV :\", error);\r\n\r\n        // Rejeter la promesse avec l'erreur\r\n        reject(error);\r\n      }\r\n    });\r\n  });\r\n}\r\n*/\n\nimport { usePapaParse } from 'react-papaparse';\nexport function importData() {\n  var _s = $RefreshSig$();\n  console.log(\"entrer dans importData\");\n  return new Promise(_s((resolve, reject) => {\n    _s();\n    const {\n      readRemoteFile\n    } = usePapaParse();\n    readRemoteFile('/datat.csv', {\n      header: true,\n      download: true,\n      complete: results => {\n        console.log(\"Chargement terminé. Données :\", results.data);\n\n        // Créer une chaîne avec les 5 premières lignes du CSV\n        let firstFiveRows = '';\n        for (let i = 0; i < 5 && i < results.data.length; i++) {\n          firstFiveRows += JSON.stringify(results.data[i]) + '\\n';\n        }\n\n        // Afficher les 5 premières lignes dans une popup\n        alert(firstFiveRows);\n\n        // Résoudre la promesse avec les données\n        resolve(results.data);\n      },\n      error: error => {\n        console.log(\"Une erreur s'est produite lors du chargement du fichier CSV :\", error);\n\n        // Rejeter la promesse avec l'erreur\n        reject(error);\n      }\n    });\n  }, \"IfKUxmpackTAZ0pH5/ITX+jNlSY=\", false, function () {\n    return [usePapaParse];\n  }));\n}","map":{"version":3,"names":["usePapaParse","importData","_s","$RefreshSig$","console","log","Promise","resolve","reject","readRemoteFile","header","download","complete","results","data","firstFiveRows","i","length","JSON","stringify","alert","error"],"sources":["C:/Users/jason/OneDrive - HESSO/Bureau/bingo-reno-app/src/domain/importData.tsx"],"sourcesContent":["import Papa from 'papaparse';\r\nimport { useCSVReader} from 'react-papaparse';\r\n/*\r\nexport function importData() {\r\n  console.log(\"entrer dans importData\");\r\n\r\n  return new Promise((resolve, reject) => {\r\n    Papa.parse(\"../public/datat.csv\", {\r\n      download: true,\r\n      header: true,\r\n      complete: function(results: { data: any[] }) {\r\n        console.log(\"Chargement terminé. Données :\", results.data);\r\n\r\n        // Créer une chaîne avec les 5 premières lignes du CSV\r\n        let firstFiveRows = '';\r\n        for (let i = 0; i < 5 && i < results.data.length; i++) {\r\n          firstFiveRows += JSON.stringify(results.data[i]) + '\\n';\r\n        }\r\n\r\n        // Afficher les 5 premières lignes dans une popup\r\n        alert(firstFiveRows);\r\n\r\n        // Résoudre la promesse avec les données\r\n        resolve(results.data);\r\n      },\r\n      error: function(error) {\r\n        console.log(\"Une erreur s'est produite lors du chargement du fichier CSV :\", error);\r\n\r\n        // Rejeter la promesse avec l'erreur\r\n        reject(error);\r\n      }\r\n    });\r\n  });\r\n}\r\n*/\r\n\r\nimport { usePapaParse } from 'react-papaparse';\r\n\r\nexport function importData() {\r\n  console.log(\"entrer dans importData\");\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const { readRemoteFile } = usePapaParse();\r\n    readRemoteFile('/datat.csv', {\r\n      header: true,\r\n      download: true,\r\n      complete: (results: any) => {\r\n        console.log(\"Chargement terminé. Données :\", results.data);\r\n\r\n        // Créer une chaîne avec les 5 premières lignes du CSV\r\n        let firstFiveRows = '';\r\n        for (let i = 0; i < 5 && i < results.data.length; i++) {\r\n          firstFiveRows += JSON.stringify(results.data[i]) + '\\n';\r\n        }\r\n\r\n        // Afficher les 5 premières lignes dans une popup\r\n        alert(firstFiveRows);\r\n\r\n        // Résoudre la promesse avec les données\r\n        resolve(results.data);\r\n      },\r\n      error: (error: any) => {\r\n        console.log(\"Une erreur s'est produite lors du chargement du fichier CSV :\", error);\r\n\r\n        // Rejeter la promesse avec l'erreur\r\n        reject(error);\r\n      }\r\n    });\r\n  });\r\n}\r\n    \r\n\r\n    "],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAErC,OAAO,IAAIC,OAAO,CAAAJ,EAAA,CAAC,CAACK,OAAO,EAAEC,MAAM,KAAK;IAAAN,EAAA;IACtC,MAAM;MAAEO;IAAe,CAAC,GAAGT,YAAY,CAAC,CAAC;IACzCS,cAAc,CAAC,YAAY,EAAE;MAC3BC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAGC,OAAY,IAAK;QAC1BT,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEQ,OAAO,CAACC,IAAI,CAAC;;QAE1D;QACA,IAAIC,aAAa,GAAG,EAAE;QACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGH,OAAO,CAACC,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UACrDD,aAAa,IAAIG,IAAI,CAACC,SAAS,CAACN,OAAO,CAACC,IAAI,CAACE,CAAC,CAAC,CAAC,GAAG,IAAI;QACzD;;QAEA;QACAI,KAAK,CAACL,aAAa,CAAC;;QAEpB;QACAR,OAAO,CAACM,OAAO,CAACC,IAAI,CAAC;MACvB,CAAC;MACDO,KAAK,EAAGA,KAAU,IAAK;QACrBjB,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAEgB,KAAK,CAAC;;QAEnF;QACAb,MAAM,CAACa,KAAK,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC;IAAA,QA1B4BrB,YAAY;EAAA,EA0BxC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}