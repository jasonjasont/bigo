{"ast":null,"code":"import { ScenarioType } from \"./scenarioType\";\nexport class Scenario {\n  constructor(type, price, works, lowerPayment, improveWinterConfort, improveSummerConfort) {\n    this.type = type;\n    this.price = price;\n    this.works = works;\n    this.lowerPayment = lowerPayment;\n    this.improveWinterConfort = improveWinterConfort;\n    this.improveSummerConfort = improveSummerConfort;\n  }\n}\nexport class BingoRenoAdvise {\n  constructor() {\n    this.scenario = void 0;\n    let matchingObjects = this.importobj();\n    console.log(matchingObjects[0][\"SC 1\"]);\n    this.scenario = [];\n    this.addScenario(new Scenario(ScenarioType.Ambitious, matchingObjects[0]['__32'], [matchingObjects[0][\"SC 1\"], matchingObjects[0]['__27'], matchingObjects[0]['__28'], matchingObjects[0]['__29'], matchingObjects[0]['__30'], matchingObjects[0]['__31']].filter(Boolean),\n    // Filtrer les valeurs vides\n\n    Math.ceil(matchingObjects[0]['__34'] / 2), Math.ceil(matchingObjects[0]['__35'] / 2), Math.ceil(matchingObjects[0]['__36'] / 2)));\n    this.addScenario(new Scenario(ScenarioType.MidRange, matchingObjects[0]['__21'], [matchingObjects[0]['SC 1'], matchingObjects[0]['__18'], matchingObjects[0]['__19'], matchingObjects[0]['__20']].filter(Boolean),\n    // Filtrer les valeurs vides\n\n    Math.ceil(matchingObjects[0]['__23'] / 2), Math.ceil(matchingObjects[0]['__24'] / 2), Math.ceil(matchingObjects[0]['__25'] / 2)));\n    this.addScenario(new Scenario(ScenarioType.SmallBudget, matchingObjects[0]['__12'], [matchingObjects[0]['SC 1'], matchingObjects[0]['__10'], matchingObjects[0]['__11']].filter(Boolean),\n    // Filtrer les valeurs vides\n\n    Math.ceil(matchingObjects[0]['__14'] / 2), Math.ceil(matchingObjects[0]['__15'] / 2), Math.ceil(matchingObjects[0]['__16'] / 2)));\n\n    /*\r\n    this.scenario = [\r\n          new Scenario(\r\n            ScenarioType.Ambitious,\r\n            matchingObjects[0]['__32'],\r\n            [\r\n                matchingObjects[0][\"SC 1\"],\r\n                matchingObjects[0]['__27'],\r\n                matchingObjects[0]['__28'],\r\n                matchingObjects[0]['__29'],\r\n                matchingObjects[0]['__30'],\r\n                matchingObjects[0]['__31'],\r\n            ].filter(Boolean), // Filtrer les valeurs vides\r\n              Math.ceil(matchingObjects[0]['__34'] / 2),\r\n            Math.ceil(matchingObjects[0]['__35'] / 2),\r\n            Math.ceil(matchingObjects[0]['__36'] / 2),\r\n        ),\r\n          new Scenario(\r\n            ScenarioType.MidRange,\r\n            matchingObjects[0]['__21'],\r\n            [\r\n                matchingObjects[0]['SC 1'],\r\n                matchingObjects[0]['__18'],\r\n                matchingObjects[0]['__19'],\r\n                matchingObjects[0]['__20'],\r\n            ].filter(Boolean), // Filtrer les valeurs vides\r\n              Math.ceil(matchingObjects[0]['__23'] / 2),\r\n            Math.ceil(matchingObjects[0]['__24'] / 2),\r\n            Math.ceil(matchingObjects[0]['__25'] / 2),\r\n        ),\r\n          new Scenario(\r\n            ScenarioType.SmallBudget,\r\n            matchingObjects[0]['__12'],\r\n            [\r\n                matchingObjects[0]['SC 1'],\r\n                matchingObjects[0]['__10'],\r\n                matchingObjects[0]['__11']\r\n            ].filter(Boolean), // Filtrer les valeurs vides\r\n              Math.ceil(matchingObjects[0]['__14'] / 2),\r\n            Math.ceil(matchingObjects[0]['__15'] / 2),\r\n            Math.ceil(matchingObjects[0]['__16'] / 2),\r\n        ),\r\n            \r\n      ]*/\n  }\n  importobj() {\n    if (typeof localStorage !== 'undefined') {\n      let matchingObjects = JSON.parse(localStorage.getItem('matchingObjects') || '[]');\n      console.log(\"arriver advise\");\n      console.log(matchingObjects);\n      return matchingObjects;\n    }\n    return [];\n  }\n  addScenario(scenario) {\n    const isDuplicate = this.scenario.some(existingScenario => existingScenario.type === scenario.type && existingScenario.price === scenario.price && existingScenario.works.every((work, index) => work === scenario.works[index]) && existingScenario.lowerPayment === scenario.lowerPayment && existingScenario.improveWinterConfort === scenario.improveWinterConfort && existingScenario.improveSummerConfort === scenario.improveSummerConfort);\n    if (!isDuplicate) {\n      this.scenario.push(scenario);\n    }\n  }\n}","map":{"version":3,"names":["ScenarioType","Scenario","constructor","type","price","works","lowerPayment","improveWinterConfort","improveSummerConfort","BingoRenoAdvise","scenario","matchingObjects","importobj","console","log","addScenario","Ambitious","filter","Boolean","Math","ceil","MidRange","SmallBudget","localStorage","JSON","parse","getItem","isDuplicate","some","existingScenario","every","work","index","push"],"sources":["C:/Users/jason/OneDrive - HESSO/Bureau/syncro git/bigo/src/domain/bingoRenoAdvise.tsx"],"sourcesContent":["import { ScenarioType } from \"./scenarioType\";\r\nimport { HelpLevel } from \"./helpLevel\";\r\nimport React, { useEffect } from 'react';\r\nimport { match } from \"assert\";\r\n\r\nexport class Scenario {\r\n    constructor(\r\n        public readonly type: ScenarioType,\r\n        public readonly price: Number,\r\n        public readonly works: Array<string>,\r\n        public readonly lowerPayment: Number,\r\n        public readonly improveWinterConfort: Number,\r\n        public readonly improveSummerConfort: Number\r\n    ) {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class BingoRenoAdvise {\r\n\r\n\r\n    public readonly scenario: Scenario[];\r\n\r\n    constructor() {\r\n        let matchingObjects = this.importobj();\r\n        console.log(matchingObjects[0][\"SC 1\"])\r\n\r\n\r\n        this.scenario = [];\r\n\r\n        this.addScenario(new Scenario(\r\n            ScenarioType.Ambitious,\r\n            matchingObjects[0]['__32'],\r\n            [\r\n                matchingObjects[0][\"SC 1\"],\r\n                matchingObjects[0]['__27'],\r\n                matchingObjects[0]['__28'],\r\n                matchingObjects[0]['__29'],\r\n                matchingObjects[0]['__30'],\r\n                matchingObjects[0]['__31'],\r\n            ].filter(Boolean), // Filtrer les valeurs vides\r\n\r\n            Math.ceil(matchingObjects[0]['__34'] / 2),\r\n            Math.ceil(matchingObjects[0]['__35'] / 2),\r\n            Math.ceil(matchingObjects[0]['__36'] / 2),\r\n        ));\r\n\r\n        this.addScenario(new Scenario(\r\n            ScenarioType.MidRange,\r\n            matchingObjects[0]['__21'],\r\n            [\r\n                matchingObjects[0]['SC 1'],\r\n                matchingObjects[0]['__18'],\r\n                matchingObjects[0]['__19'],\r\n                matchingObjects[0]['__20'],\r\n            ].filter(Boolean), // Filtrer les valeurs vides\r\n\r\n            Math.ceil(matchingObjects[0]['__23'] / 2),\r\n            Math.ceil(matchingObjects[0]['__24'] / 2),\r\n            Math.ceil(matchingObjects[0]['__25'] / 2)\r\n        ));\r\n\r\n        this.addScenario(new Scenario(\r\n            ScenarioType.SmallBudget,\r\n            matchingObjects[0]['__12'],\r\n            [\r\n                matchingObjects[0]['SC 1'],\r\n                matchingObjects[0]['__10'],\r\n                matchingObjects[0]['__11']\r\n            ].filter(Boolean), // Filtrer les valeurs vides\r\n\r\n            Math.ceil(matchingObjects[0]['__14'] / 2),\r\n            Math.ceil(matchingObjects[0]['__15'] / 2),\r\n            Math.ceil(matchingObjects[0]['__16'] / 2),\r\n        ));\r\n\r\n        /*\r\n        this.scenario = [\r\n\r\n            new Scenario(\r\n                ScenarioType.Ambitious,\r\n                matchingObjects[0]['__32'],\r\n                [\r\n                    matchingObjects[0][\"SC 1\"],\r\n                    matchingObjects[0]['__27'],\r\n                    matchingObjects[0]['__28'],\r\n                    matchingObjects[0]['__29'],\r\n                    matchingObjects[0]['__30'],\r\n                    matchingObjects[0]['__31'],\r\n                ].filter(Boolean), // Filtrer les valeurs vides\r\n\r\n                Math.ceil(matchingObjects[0]['__34'] / 2),\r\n                Math.ceil(matchingObjects[0]['__35'] / 2),\r\n                Math.ceil(matchingObjects[0]['__36'] / 2),\r\n            ),\r\n\r\n            new Scenario(\r\n                ScenarioType.MidRange,\r\n                matchingObjects[0]['__21'],\r\n                [\r\n                    matchingObjects[0]['SC 1'],\r\n                    matchingObjects[0]['__18'],\r\n                    matchingObjects[0]['__19'],\r\n                    matchingObjects[0]['__20'],\r\n                ].filter(Boolean), // Filtrer les valeurs vides\r\n\r\n                Math.ceil(matchingObjects[0]['__23'] / 2),\r\n                Math.ceil(matchingObjects[0]['__24'] / 2),\r\n                Math.ceil(matchingObjects[0]['__25'] / 2),\r\n            ),\r\n\r\n            new Scenario(\r\n                ScenarioType.SmallBudget,\r\n                matchingObjects[0]['__12'],\r\n                [\r\n                    matchingObjects[0]['SC 1'],\r\n                    matchingObjects[0]['__10'],\r\n                    matchingObjects[0]['__11']\r\n                ].filter(Boolean), // Filtrer les valeurs vides\r\n\r\n                Math.ceil(matchingObjects[0]['__14'] / 2),\r\n                Math.ceil(matchingObjects[0]['__15'] / 2),\r\n                Math.ceil(matchingObjects[0]['__16'] / 2),\r\n            ),\r\n\r\n\r\n            \r\n\r\n        ]*/\r\n\r\n\r\n    }\r\n    importobj() {\r\n        if (typeof localStorage !== 'undefined') {\r\n            let matchingObjects = JSON.parse(localStorage.getItem('matchingObjects') || '[]');\r\n            console.log(\"arriver advise\")\r\n            console.log(matchingObjects);\r\n            return matchingObjects;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    addScenario(scenario: Scenario) {\r\n        const isDuplicate = this.scenario.some(existingScenario =>\r\n            existingScenario.type === scenario.type &&\r\n            existingScenario.price === scenario.price &&\r\n            existingScenario.works.every((work, index) => work === scenario.works[index]) &&\r\n            existingScenario.lowerPayment === scenario.lowerPayment &&\r\n            existingScenario.improveWinterConfort === scenario.improveWinterConfort &&\r\n            existingScenario.improveSummerConfort === scenario.improveSummerConfort\r\n        );\r\n\r\n        if (!isDuplicate) {\r\n            this.scenario.push(scenario);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}